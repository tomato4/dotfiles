#!/usr/bin/zsh

# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.tar.xz)    tar xJf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# alias vim
alias vim=nvim

# List commands
alias ls='exa -a --color=always --icons=always --group-directories-first'
alias ll='exa -alF --color=always --icons=always --group-directories-first'
alias lt='exa -aT --color=always --icons=always --group-directories-first'
alias l.='exa -a | grep "^\."'

# Quick access to the zshrc files
alias zshrc='${=EDITOR} ~/.zshrc'
alias zshalias='${=EDITOR} $DOTFILES/zsh/zsh_alias'

alias grep='grep --color'

# Command line head / tail shortcuts
alias -g H='| head'
alias -g T='| tail'
alias -g G='| grep'
alias -g L="| less"
alias -g M="| most"
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias -g NULL="> /dev/null 2>&1"

# find
alias fd='find . -type d -iname'
alias ff='find . -type f -iname'

alias h='history'
alias hgrep="fc -El 0 | grep"
alias p='ps -f'

# directory stack
alias d='dirs -pv'
alias pd=pushd
alias ppd=popd
alias slurp='pushd - && pushd'

# git shortcuts
alias g='git'
alias ga='git add -A'
alias gc='git commit'
alias gh='git checkout'
alias gA='git amend'
alias gd='git diff'
alias gl='git log --oneline --graph --all --decorate'
alias gp='git push'
alias gs='git status'
alias gf='git fetch --all'

# Kubernetes shortcuts
alias k='kubectl'

# custom shortcuts
alias e='exit'
alias q='exit'
alias cl='clear; fastfetch'
alias sc='php bin/console'
alias dockerkill='docker kill $(docker ps -q)'

function setup {
  cd "$DOTFILES/setup" || return
  # shellcheck disable=SC2068
  ./setup.sh $@
}
_setup_completion() {
  local script_dir="$DOTFILES/setup/scripts"
  local -a files

  # Populate files array with file names (no path)
  files=()
  if [[ -d $script_dir ]]; then
    for f in "$script_dir"/*; do
      [[ -f "$f" ]] && files+=("${f##*/}")
    done
  fi

  _describe 'setup script' files
}
compdef _setup_completion setup

# don't mind me here
alias rr='curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash'

# ranger function with auto-cd to directory
function r {
    local SID=$(LC_CTYPE=C tr -dc A-Za-z0-9 </dev/urandom | head -c 10)
    ranger --choosedir=$HOME/.config/ranger/sessions/$SID
    cd "$(cat ~/.config/ranger/sessions/$SID)"
    rm ~/.config/ranger/sessions/$SID
}

# create folder and move to the folder
function mkcd {
    mkdir $1
    cd $1
}

# clean git from deleted origin branches
function gitclean {
    git fetch --all -p
    git branch -vv | grep ": gone]" | awk '{ print $1 }' | xargs -r -n 1 git branch -D
    # git branch --merged | egrep -v "(^\*|master|dev)" | xargs -r git branch -d
}

# clean yay orphaned dependency
function yayclean {
    yay -Rs $(yay -Qdtq)
}

# start mon2cam
function mon2cam {
    deno run --unstable -A -r -q ~/Programs/Mon2Cam/src/mod.ts
}

# Docker exec
function de {
    docker exec -it "$1" /bin/bash
}

_de() {
    compadd $(docker ps --format "{{.Names}}")
}
compdef _de de

# remove symlink (and substitute with real file)
function lnrm {
    if [ $# != 1 ]; then
        echo "Invalid number of arguments."
        return 1
    fi

    if [ ! -L "$1" ]; then
        echo "Not a symlinked file."
        return 1
    fi

    realpath=$(readlink -f "$1")
    rm -f "$1"
    cp -r "$realpath" "$1"
}

function gitCurrentBranch {
  git symbolic-ref --short HEAD
}

# TODO this must be fixed
#function gitRebase {
#  git rebase --onto $1 $(git rev-parse $(git log $1..$(gitCurrentBranch) --oneline --pretty=format:"%h" --no-patch | tail -1)^) $(gitCurrentBranch)
#}
